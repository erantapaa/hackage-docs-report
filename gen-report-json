#!/usr/bin/env python

import sqlite3
import json
import sys
import os
import time

QUERY = """
select a.package, a.version, a.upload_time, b.version as last_version, b.upload_time as last_upload_time, b.status as last_status from doc_status a left join latest_docs b on b.package = a.package where a.status like 'Docs pending%' order by a.upload_time desc;
"""

def emit_row(r):
  # print "<tr><td>", r["upload_time"], "</td><td>", r["package"], "</td><td>", r["version"], "</td></tr>"
  print "<tr><td>{upload_time}</td><td><a href=\"http://hackage.haskell.org/package/{package}-{version}\">{package}-{version}</a></td></tr>".format(**r)

def gen_table(rows):
  for r in rows:
    emit_row(r)

def main():
  dbpath = sys.argv[1]

  # get last modified time of report.timestamp
  created_time = time.ctime(os.path.getmtime("report.timestamp"))

  data = { "created_time": created_time }
  rows = []

  conn = sqlite3.connect(dbpath)
  conn.row_factory = sqlite3.Row
  c = conn.cursor()
  c.execute(QUERY)
  rows = [ dict(r) for r in c.fetchall() ]
  data["rows"] = rows
  print json.dumps(data)

main()

